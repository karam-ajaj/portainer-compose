# version: '3.3'
# services:
#   terraform:
#     image: hashicorp/terraform:latest
#     command:
#      - plan
#     networks:
#      - internal
#      - traefik-public
#     logging:
#       driver: json-file
#     deploy:
#       replicas: 0
#       placement:
#         constraints:
#          - node.labels.Arch!=i686
# networks:
#   internal:
#     driver: overlay
#   traefik-public:
#     external: true
version: '3.4'
services:
  terraform:
    image: debian:trixie-slim
    # command: /home/tf01/install.sh
    command: tail -f /dev/null
    # entrypoint: /home/tf01/install.sh
    environment:
      PGID: '911'
      PUID: '911'
      TZ: Europe/Amsterdam
    volumes:
     - /nfs-nas-swarm/config/terraform/tf01:/home/tf01
    #  - /nfs-nas-swarm/config/terraform/install.sh:/run/install.sh
    networks:
     - traefik-public
    logging:
      driver: json-file
    deploy:
    #   labels:
    #     traefik.http.routers.XYZ-http.rule: Host(`XYZ.vnerd.nl`)
    #     traefik.http.routers.XYZ-https.rule: Host(`XYZ.vnerd.nl`)

    #     traefik.http.routers.XYZ-http.entrypoints: http
    #     traefik.http.routers.XYZ-https.entrypoints: https

    #     traefik.http.routers.XYZ-http.middlewares: https-redirect
    #     traefik.http.routers.XYZ-https.middlewares: authelia

    #     traefik.http.services.XYZ.loadbalancer.server.port: '80'
    #     traefik.enable: 'true'
    #     traefik.constraint-label: traefik-public
    #     traefik.docker.network: traefik-public

    #     traefik.http.routers.XYZ-https.tls: 'true'
    #     traefik.http.routers.XYZ-https.tls.certresolver: le
      placement:
       constraints:
         - node.labels.Arch!=i686
         - node.labels.worker==enabled
networks:
  traefik-public:
    external: true
